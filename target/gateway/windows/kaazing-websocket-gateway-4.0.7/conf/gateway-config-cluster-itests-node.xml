<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2007-2014, Kaazing Corporation. All rights reserved.

-->

<gateway-config xmlns="http://xmlns.kaazing.com/2012/09/gateway">
  <!--
       Periodically sync this file from the HTML5 release:
       com.kaazing.gateway.html5.assembly.extras\src\main\gateway\conf\gateway-config.xml
  -->
  <!--
  #############################################################################
  #############################################################################
                Kaazing WebSocket Gateway Configuration File

  This configuration file identifies all the possible services and associated
  security and management that flow through Kaazing WebSocket Gateway.

  Refer to the "Setting Up Kaazing WebSocket Gateway" document for basic
  configuration information. Refer to the Administrator's Guide for detailed
  descriptions of each element in this configuration file.

  #############################################################################
  #############################################################################
  -->
  <!--
  Property defaults

  Specify the default values for properties which will be substituted when
  the Gateway starts. You can replace any values in this configuration file
  with a property using the dollar-sign and curly brace format demonstrated
  in the echo service below. Starting the Gateway replaces all instances of
  property-name with the value you specify in this section.

  You can supersede property default values by using an environment variable
  when starting the Gateway. See the "Setting Up Kaazing WebSocket Gateway"
  document for more information.
  -->
  <properties>
    <property>
      <name>gateway.hostname</name>
      <value>gateway.kaazing.me</value>
    </property>
    <property>
      <name>node.hostname</name>
      <value>node.kaazing.me</value>
    </property>
    <property>
      <name>node.ip</name>
      <value>127.0.0.1</value>
    </property>
    <property>
      <name>node.cluster.accept</name>
      <value>tcp://127.0.0.1:5351</value>
    </property>
    <property>
      <name>node.cluster.connect</name>
      <value>udp://127.0.0.1:59595</value>
    </property>
    <property>
      <name>gateway.base.port</name>
      <value>8000</value>
    </property>
    <property>
      <name>gateway.secure-base.port</name>
      <value>9000</value>
    </property>
    <!-- "Extras" is not only used for demos, but also to test cross-origin services -->
    <property>
      <name>gateway.extras.port</name>
      <value>8001</value>
    </property>
    <property>
      <name>gateway.secure-extras.port</name>
      <value>9001</value>
    </property>
    <property>
      <name>node.jmxport</name>
      <value>2121</value>
    </property>
  </properties>

  <cluster>
    <name>gatewayTesting</name>
    <accept>${node.cluster.accept}</accept>
    <connect>${node.cluster.connect}</connect>
  </cluster>

  <!-- balancer services (balancing ECHO) -->
  <service>
    <name>balancerBaseEcho</name>
    <accept>ws://${gateway.hostname}:${gateway.base.port}/echo</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.base.port}</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerSecureEcho</name>
    <accept>wss://${gateway.hostname}:${gateway.secure-base.port}/echo</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-base.port}</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerBaseEcho2</name>
    <accept>ws://${gateway.hostname}:${gateway.base.port}/echo${gateway.base.port}</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.base.port}</ws.bind>
    </accept-options>
    <!-- no cross site constraint defined. we want to test same origin with this -->
  </service>
  <service>
    <name>balancerSecureEcho2</name>
    <accept>wss://${gateway.hostname}:${gateway.secure-base.port}/echo${gateway.secure-base.port}</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-base.port}</wss.bind>
    </accept-options>
    <!-- no cross site constraint defined. we want to test same origin with this -->
  </service>
  <service>
    <name>balancerEcho80</name>
    <accept>ws://${gateway.hostname}:80/echo80</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:80</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho443</name>
    <accept>wss://${gateway.hostname}:443/echo443</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:443</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho${gateway.extras.port}</name>
    <accept>ws://${gateway.hostname}:${gateway.extras.port}/echo</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.extras.port}</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho${gateway.secure-extras.port}</name>
    <accept>wss://${gateway.hostname}:${gateway.secure-extras.port}/echo</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-extras.port}</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerProxyToEcho${gateway.extras.port}</name>
    <accept>ws://${gateway.hostname}:${gateway.extras.port}/proxyToEcho</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.extras.port}</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerProxyToEcho${gateway.secure-extras.port}</name>
    <accept>wss://${gateway.hostname}:${gateway.secure-extras.port}/proxyToEcho</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-extras.port}</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho${gateway.extras.port}-2</name>
    <accept>ws://${gateway.hostname}:${gateway.extras.port}/echo${gateway.extras.port}</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.extras.port}</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho${gateway.secure-extras.port}-2</name>
    <accept>wss://${gateway.hostname}:${gateway.secure-extras.port}/echo${gateway.secure-extras.port}</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-extras.port}</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho8050</name>
    <accept>ws://${gateway.hostname}:8050/echoRepeat1001</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8050</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho9050</name>
    <accept>wss://${gateway.hostname}:9050/echoRepeat1001</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9050</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho8050-2</name>
    <accept>ws://${gateway.hostname}:8050/echoRepeat10001</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8050</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho9050-2</name>
    <accept>wss://${gateway.hostname}:9050/echoRepeat10001</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9050</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho8050-2-NoTimeout</name>
    <accept>ws://${gateway.hostname}:8050/echoRepeat10001NoTimeout</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8050</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho9050-2-NoTimeout</name>
    <accept>wss://${gateway.hostname}:9050/echoRepeat10001NoTimeout</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9050</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho8026</name>
    <accept>ws://${gateway.hostname}:8026/</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8026</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho9026</name>
    <accept>wss://${gateway.hostname}:9026/</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9026</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho8027</name>
    <accept>ws://${gateway.hostname}:8027</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8027</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho9027</name>
    <accept>wss://${gateway.hostname}:9027</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9027</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho8011</name>
    <accept>ws://${gateway.hostname}:8011/echoLargeMessageSize</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8011</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho9011</name>
    <accept>wss://${gateway.hostname}:9011/echoLargeMessageSize</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9011</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho8002</name>
    <accept>ws://${gateway.hostname}:8002/echo8002</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8002</ws.bind>
    </accept-options>
  </service>
  <service>
    <name>balancerEcho9002</name>
    <accept>wss://${gateway.hostname}:9002/echo9002</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9002</wss.bind>
    </accept-options>
  </service>
  <service>
    <name>balancerEcho8003</name>
    <accept>ws://${gateway.hostname}:8003/echo8003</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8003</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho9003</name>
    <accept>wss://${gateway.hostname}:9003/echo9003</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9003</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho8005</name>
    <accept>ws://${gateway.hostname}:8005/echo8005</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8005</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:7999</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEcho9005</name>
    <accept>wss://${gateway.hostname}:9005/echo9005</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9005</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:7999</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEchoAuth80</name>
    <accept>ws://${gateway.hostname}:80/echoAuth</accept>
    <type>balancer</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:80</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEchoAuth443</name>
    <accept>wss://${gateway.hostname}:443/echoAuth</accept>
    <type>balancer</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:443</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEchoAuth8004</name>
    <accept>ws://${gateway.hostname}:8004/echoAuth</accept>
    <type>balancer</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8004</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEchoAuth9004</name>
    <accept>wss://${gateway.hostname}:9004/echoAuth</accept>
    <type>balancer</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9004</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEchoAuth8006</name>
    <accept>ws://${gateway.hostname}:8006/echoAuth</accept>
    <type>balancer</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8006</ws.bind>
    </accept-options>
    <!-- does not store a cookie and the challenge timeout is 6 seconds only. for tests that test challenge expiry -->
    <realm-name>application-challenge</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEchoAuth9006</name>
    <accept>wss://${gateway.hostname}:9006/echoAuth</accept>
    <type>balancer</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9006</wss.bind>
    </accept-options>
    <!-- does not store a cookie and the challenge timeout is 6 seconds only. for tests that test challenge expiry -->
    <realm-name>application-challenge</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEchoDOWN8181</name>
    <accept>ws://${gateway.hostname}:8181/echoDOWN</accept>
    <type>balancer</type>
    <accept-options>
      <ws.bind>${node.ip}:8181</ws.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>balancerEchoDOWN9181</name>
    <accept>wss://${gateway.hostname}:9181/echoDOWN</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9181</wss.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
  </cross-site-constraint>
  </service>

    <service>
        <name>balancerPeerDomainTest8182</name>
        <accept>ws://${gateway.hostname}:8182/echo_peer_domain</accept>
        <type>balancer</type>
        <accept-options>
            <ws.bind>${node.ip}:8182</ws.bind>
        </accept-options>
        <cross-site-constraint>
            <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
        </cross-site-constraint>
        <cross-site-constraint>
            <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
        </cross-site-constraint>
        <cross-site-constraint>
            <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
        </cross-site-constraint>
        <cross-site-constraint>
            <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
        </cross-site-constraint>
    </service>
    <service>
        <name>balancerPeerDomainTest9182</name>
        <accept>wss://${gateway.hostname}:9182/echo_peer_domain</accept>
        <type>balancer</type>
        <accept-options>
            <wss.bind>${node.ip}:9182</wss.bind>
        </accept-options>
        <cross-site-constraint>
            <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
        </cross-site-constraint>
        <cross-site-constraint>
            <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
        </cross-site-constraint>
        <cross-site-constraint>
            <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
        </cross-site-constraint>
        <cross-site-constraint>
            <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
        </cross-site-constraint>
    </service>
  <service>
    <name>balancerEchoClientVerify9007</name>
    <accept>wss://${gateway.hostname}:9007/echoSSLClientVerify</accept>
    <type>balancer</type>
    <accept-options>
      <wss.bind>${node.ip}:9007</wss.bind>
      <ssl.verify-client>required</ssl.verify-client>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>

  <!-- Disabling service as gateway fails to start when node uses a completely different URL(localhost) - KG-13580
TODO: To request an addition to keystore.db with a hostname = different.domain.test
TODO: Replace localhost with the aforementioned domain name to add more readability to this testcase
  <service>
  <name>balancerRedirectNegativeTest8183</name>
  <accept>ws://${gateway.hostname}:8183/echo_redirect_different_domain</accept>
  <type>balancer</type>
  <accept-options>
    <ws.bind>${node.ip}:8183</ws.bind>
  </accept-options>
  <cross-site-constraint>
    <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
  </cross-site-constraint>
  <cross-site-constraint>
    <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
  </cross-site-constraint>
  <cross-site-constraint>
    <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
  </cross-site-constraint>
  <cross-site-constraint>
    <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
  </cross-site-constraint>
  </service>
  <service>
  <name>balancerRedirectNegativeTest9183</name>
  <accept>wss://${gateway.hostname}:9183/echo_redirect_different_domain</accept>
  <type>balancer</type>
  <accept-options>
    <wss.bind>${node.ip}:9183</wss.bind>
  </accept-options>
  <cross-site-constraint>
    <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
  </cross-site-constraint>
  <cross-site-constraint>
    <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
  </cross-site-constraint>
  <cross-site-constraint>
    <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
  </cross-site-constraint>
  <cross-site-constraint>
    <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
  </cross-site-constraint>
  </service>
  -->

  <!-- Echo services -->
  <service>
    <name>echoBase</name>
    <accept>ws://${node.hostname}:${gateway.base.port}/echo</accept>
    <balance>ws://${gateway.hostname}:${gateway.base.port}/echo</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.base.port}</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoSecure</name>
    <accept>wss://${node.hostname}:${gateway.secure-base.port}/echo</accept>
    <balance>wss://${gateway.hostname}:${gateway.secure-base.port}/echo</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-base.port}</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoBase2</name>
    <accept>ws://${node.hostname}:${gateway.base.port}/echo${gateway.base.port}</accept>
    <balance>ws://${gateway.hostname}:${gateway.base.port}/echo${gateway.base.port}</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.base.port}</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- cluster cross site constraint defined. we want to test same origin with this -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoSecure2</name>
    <accept>wss://${node.hostname}:${gateway.secure-base.port}/echo${gateway.secure-base.port}</accept>
    <balance>wss://${gateway.hostname}:${gateway.secure-base.port}/echo${gateway.secure-base.port}</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-base.port}</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- cluster cross site constraint defined. we want to test same origin with this -->
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo80</name>
    <accept>ws://${node.hostname}:80/echo80</accept>
    <balance>ws://${gateway.hostname}:80/echo80</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:80</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo443</name>
    <accept>wss://${node.hostname}:443/echo443</accept>
    <balance>wss://${gateway.hostname}:443/echo443</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:443</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo${gateway.extras.port}</name>
    <accept>ws://${node.hostname}:${gateway.extras.port}/echo</accept>
    <balance>ws://${gateway.hostname}:${gateway.extras.port}/echo</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.extras.port}</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo${gateway.secure-extras.port}</name>
    <accept>wss://${node.hostname}:${gateway.secure-extras.port}/echo</accept>
    <balance>wss://${gateway.hostname}:${gateway.secure-extras.port}/echo</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-extras.port}</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo${gateway.extras.port}-2</name>
    <accept>ws://${node.hostname}:${gateway.extras.port}/echo${gateway.extras.port}</accept>
    <balance>ws://${gateway.hostname}:${gateway.extras.port}/echo${gateway.extras.port}</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.extras.port}</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo${gateway.secure-extras.port}-2</name>
    <accept>wss://${node.hostname}:${gateway.secure-extras.port}/echo${gateway.secure-extras.port}</accept>
    <balance>wss://${gateway.hostname}:${gateway.secure-extras.port}/echo${gateway.secure-extras.port}</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-extras.port}</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo8050</name>
    <accept>ws://${node.hostname}:8050/echoRepeat1001</accept>
    <balance>ws://${gateway.hostname}:8050/echoRepeat1001</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <repeat>1001</repeat>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8050</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo9050</name>
    <accept>wss://${node.hostname}:9050/echoRepeat1001</accept>
    <balance>wss://${gateway.hostname}:9050/echoRepeat1001</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <repeat>1001</repeat>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9050</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo8050-2</name>
    <accept>ws://${node.hostname}:8050/echoRepeat10001</accept>
    <balance>ws://${gateway.hostname}:8050/echoRepeat10001</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <repeat>10001</repeat>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8050</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo9050-2</name>
    <accept>wss://${node.hostname}:9050/echoRepeat10001</accept>
    <balance>wss://${gateway.hostname}:9050/echoRepeat10001</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <repeat>10001</repeat>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9050</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo8050-2-NoTimeout</name>
    <accept>ws://${node.hostname}:8050/echoRepeat10001NoTimeout</accept>
    <balance>ws://${gateway.hostname}:8050/echoRepeat10001NoTimeout</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <repeat>10001</repeat>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8050</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo9050-2-NoTimeout</name>
    <accept>wss://${node.hostname}:9050/echoRepeat10001NoTimeout</accept>
    <balance>wss://${gateway.hostname}:9050/echoRepeat10001NoTimeout</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <repeat>10001</repeat>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9050</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo8026</name>
    <accept>ws://${node.hostname}:8026/</accept>
    <balance>ws://${gateway.hostname}:8026/</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8026</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo9026</name>
    <accept>wss://${node.hostname}:9026/</accept>
    <balance>wss://${gateway.hostname}:9026/</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9026</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo8027</name>
    <accept>ws://${node.hostname}:8027</accept>
    <balance>ws://${gateway.hostname}:8027</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8027</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo9027</name>
    <accept>wss://${node.hostname}:9027</accept>
    <balance>wss://${gateway.hostname}:9027</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9027</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo8011</name>
    <accept>ws://${node.hostname}:8011/echoLargeMessageSize</accept>
    <balance>ws://${gateway.hostname}:8011/echoLargeMessageSize</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8011</ws.bind>
      <ws.maximum.message.size>1024k</ws.maximum.message.size>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo9011</name>
    <accept>wss://${node.hostname}:9011/echoLargeMessageSize</accept>
    <balance>wss://${gateway.hostname}:9011/echoLargeMessageSize</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9011</wss.bind>
      <ws.maximum.message.size>1024k</ws.maximum.message.size>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo8002</name>
    <accept>ws://${node.hostname}:8002/echo8002</accept>
    <balance>ws://${gateway.hostname}:8002/echo8002</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8002</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
  </service>
  <service>
    <name>echo9002</name>
    <accept>wss://${node.hostname}:9002/echo9002</accept>
    <balance>wss://${gateway.hostname}:9002/echo9002</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9002</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
  </service>
  <service>
    <name>echo8003</name>
    <accept>ws://${node.hostname}:8003/echo8003</accept>
    <balance>ws://${gateway.hostname}:8003/echo8003</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8003</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo9003</name>
    <accept>wss://${node.hostname}:9003/echo9003</accept>
    <balance>wss://${gateway.hostname}:9003/echo9003</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9003</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo8005</name>
    <accept>ws://${node.hostname}:8005/echo8005</accept>
    <balance>ws://${gateway.hostname}:8005/echo8005</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8005</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:7999</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echo9005</name>
    <accept>wss://${node.hostname}:9005/echo9005</accept>
    <balance>wss://${gateway.hostname}:9005/echo9005</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9005</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:7999</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoAuth80</name>
    <accept>ws://${node.hostname}:80/echoAuth</accept>
    <balance>ws://${gateway.hostname}:80/echoAuth</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:80</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoAuth443</name>
    <accept>wss://${node.hostname}:443/echoAuth</accept>
    <balance>wss://${gateway.hostname}:443/echoAuth</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:443</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoAuth8004</name>
    <accept>ws://${node.hostname}:8004/echoAuth</accept>
    <balance>ws://${gateway.hostname}:8004/echoAuth</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8004</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoAuth9004</name>
    <accept>wss://${node.hostname}:9004/echoAuth</accept>
    <balance>wss://${gateway.hostname}:9004/echoAuth</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9004</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoAuth8006</name>
    <accept>ws://${node.hostname}:8006/echoAuth</accept>
    <balance>ws://${gateway.hostname}:8006/echoAuth</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8006</ws.bind>
    </accept-options>
    <!-- does not store a cookie and the challenge timeout is 6 seconds only. for tests that test challenge expiry -->
    <realm-name>application-challenge</realm-name>
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoAuth9006</name>
    <accept>wss://${node.hostname}:9006/echoAuth</accept>
    <balance>wss://${gateway.hostname}:9006/echoAuth</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9006</wss.bind>
    </accept-options>
    <!-- does not store a cookie and the challenge timeout is 6 seconds only. for tests that test challenge expiry -->
    <realm-name>application-challenge</realm-name>
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoSSLClientVerify9007</name>
    <accept>wss://${node.hostname}:9007/echoSSLClientVerify</accept>
    <balance>wss://${gateway.hostname}:9007/echoSSLClientVerify</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9007</wss.bind>
      <ssl.verify-client>required</ssl.verify-client>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>*</allow-origin>
    </cross-site-constraint>
  </service>

  <!-- proxy services -->
  <service>
    <name>proxy8181</name>
    <accept>ws://${node.hostname}:8181/echoDOWN</accept>
    <connect>tcp://${gateway.hostname}:5783</connect> <!-- port number which will fail -->
    <balance>ws://${gateway.hostname}:8181/echoDOWN</balance>
    <type>proxy</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8181</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>proxy9181</name>
    <accept>wss://${node.hostname}:9181/echoDOWN</accept>
    <connect>tcp://${gateway.hostname}:5783</connect> <!-- port number which will fail -->
    <balance>wss://${gateway.hostname}:9181/echoDOWN</balance>
    <type>proxy</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9181</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>

  <service>
    <name>proxytoecho1</name>
    <accept>ws://${node.hostname}:${gateway.extras.port}/proxyToEcho</accept>
    <connect>ws://${node.hostname}:${gateway.extras.port}/echo${gateway.extras.port}</connect>
    <balance>ws://${gateway.hostname}:${gateway.extras.port}/proxyToEcho</balance>
    <type>proxy</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:${gateway.extras.port}</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>proxytoecho2</name>
    <accept>wss://${node.hostname}:${gateway.secure-extras.port}/proxyToEcho</accept>
    <connect>wss://${node.hostname}:${gateway.secure-extras.port}/echo${gateway.secure-extras.port}</connect>
    <balance>wss://${gateway.hostname}:${gateway.secure-extras.port}/proxyToEcho</balance>
    <type>proxy</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:${gateway.secure-extras.port}</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!-- Keep cross-site constraints at ports ${gateway.base.port} (base port) and ${gateway.secure-base.port} -->
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>


  <!-- HTTP Redirect Tests -->
  <service>
    <name>echoPeerDomainTest8182</name>
    <accept>ws://${node.hostname}:8182/echo_peer_domain</accept>
    <balance>ws://${gateway.hostname}:8182/echo_peer_domain</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8182</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoPeerDomainTest9182</name>
    <accept>wss://${node.hostname}:9182/echo_peer_domain</accept>
    <balance>wss://${gateway.hostname}:9182/echo_peer_domain</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9182</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>

  <!-- Disabling service as gateway fails to start when node uses a completely different URL(localhost) - KG-13580
  TODO: To request an addition to keystore.db with a hostname = different.domain.test\
  TODO: Replace localhost with the aforementioned domain name to add more readability to this testcase
  <service>
    <name>echoPeerDomainTest8183</name>
    <accept>ws://localhost:8183/echo_redirect_different_domain</accept>
    <balance>ws://${gateway.hostname}:8183/echo_redirect_different_domain</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <ws.bind>${node.ip}:8183</ws.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  <service>
    <name>echoPeerDomainTest9183</name>
    <accept>wss://localhost:9183/echo_redirect_different_domain</accept>
    <balance>wss://${gateway.hostname}:9183/echo_redirect_different_domain</balance>
    <type>echo</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <wss.bind>${node.ip}:9183</wss.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service>
  -->

  <!-- broadcast/sse services -->
  <!--
  UDP broadcast service
  This type of service is used to broadcast information from a back-end
  service.

  Kaazing WebSocket Gateway supports Multicast. To configure a service
  that is running on Kaazing WebSocket Gateway to use a multicast address,
  you must specify the multicast URI in the accept property.
  See the document "How to Configure Kaazing WebSocket Gateway to Use Multicast"
  for more information.
  -->
  <!--service>
    <name>broadcast</name>
    <accept>sse://${gateway.hostname}:${gateway.extras.port}/sse</accept>
    <accept>sse+ssl://${gateway.hostname}:${gateway.secure-extras.port}/sse</accept>
    <accept>ws://${gateway.hostname}:${gateway.extras.port}/broadcast</accept>
    <accept>wss://${gateway.hostname}:${gateway.secure-extras.port}/broadcast</accept>
    <type>broadcast</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <accept>ws://${gateway.hostname}:${gateway.base.port}/outboundsse</accept>
    </properties>
    <accept-options>
      <tcp.bind>${node.ip}:${gateway.extras.port}</tcp.bind>
      <ssl.bind>${node.ip}:${gateway.secure-extras.port}</ssl.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service-->
  <!-- this service does the same thing as the one above it, just with outbound stream of
   same origin as the https page. It is needed to be used when running the page on https.
   It is created to overcome the limitation whereby the websocket in the <accept> element
   in the <properties> element only accepts connection from the same origin.
   -->
  <!--service>
    <name>broadcast2</name>
    <accept>sse://${gateway.hostname}:${gateway.extras.port}/sseOnHttps</accept>
    <accept>sse+ssl://${gateway.hostname}:${gateway.secure-extras.port}/sseOnHttps</accept>
    <accept>ws://${gateway.hostname}:${gateway.extras.port}/broadcastOnHttps</accept>
    <accept>wss://${gateway.hostname}:${gateway.secure-extras.port}/broadcastOnHttps</accept>
    <type>broadcast</type>
    <properties>
      <accept>wss://${gateway.hostname}:${gateway.secure-base.port}/outboundsseOnHttps</accept>
    </properties>
    <accept-options>
      <tcp.bind>${node.ip}:${gateway.extras.port}</tcp.bind>
      <ssl.bind>${node.ip}:${gateway.secure-extras.port}</ssl.bind>
    </accept-options>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>http://${gateway.hostname}:${gateway.extras.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-base.port}</allow-origin>
    </cross-site-constraint>
    <cross-site-constraint>
      <allow-origin>https://${gateway.hostname}:${gateway.secure-extras.port}</allow-origin>
    </cross-site-constraint>
  </service-->

  <!--
  Directory service
  The directory service is used to serve static files from the embedded web server
  within Kaazing WebSocket Gateway. For example, you access the Kaazing 'home'
  page using this service.

  The <directory> tag specifies the path of your static files relative
  to GATEWAY_HOME/web, where GATEWAY_HOME is the directory where you
  installed Kaazing WebSocket Gateway. Note: You cannot specify an
  absolute path in the <directory> tag.
  -->
  <service>
    <name>directory</name>
    <accept>http://${gateway.hostname}:${gateway.base.port}/</accept>
    <type>directory</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <directory>/base</directory>
      <welcome-file>index.html</welcome-file>
      <error-pages-directory>/error-pages</error-pages-directory>
      <options>indexes</options>
    </properties>
    <accept-options>
      <http.bind>${node.ip}:${gateway.base.port}</http.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!--
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    -->
  </service>
  <service>
    <name>directory-secure</name>
    <accept>https://${gateway.hostname}:${gateway.secure-base.port}/</accept>
    <type>directory</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <directory>/base</directory>
      <welcome-file>index.html</welcome-file>
      <error-pages-directory>/error-pages</error-pages-directory>
      <options>indexes</options>
    </properties>
    <accept-options>
      <https.bind>${node.ip}:${gateway.secure-base.port}</https.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!--
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    -->
  </service>
  <!-- This is different from the way its defined in HTML5! (as of 3.2.0) -->
  <service>
    <name>directory2</name>
    <accept>http://${gateway.hostname}:${gateway.extras.port}/</accept>
    <type>directory</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <directory>/extras</directory>
      <welcome-file>index.html</welcome-file>
      <error-pages-directory>/error-pages</error-pages-directory>
      <options>indexes</options>
    </properties>
    <accept-options>
      <http.bind>${node.ip}:${gateway.extras.port}</http.bind>
    </accept-options>
    <realm-name>demo</realm-name>
  </service>
  <service>
    <name>directory2-secure</name>
    <accept>https://${gateway.hostname}:${gateway.secure-extras.port}/</accept>
    <type>directory</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
      <directory>/extras</directory>
      <welcome-file>index.html</welcome-file>
      <error-pages-directory>/error-pages</error-pages-directory>
      <options>indexes</options>
    </properties>
    <accept-options>
      <https.bind>${node.ip}:${gateway.secure-extras.port}</https.bind>
    </accept-options>
    <realm-name>demo</realm-name>
  </service>
  <service>
    <name>console-directory</name>
    <description>Directory service for the Kaazing Console files</description>
    <accept>http://${gateway.hostname}:${gateway.base.port}/console</accept>
    <type>directory</type>
    <properties>
      <directory>/console</directory>
      <welcome-file>index.html</welcome-file>
      <error-pages-directory>/error-pages</error-pages-directory>
      <options>indexes</options>
    </properties>
    <accept-options>
      <http.bind>${node.ip}:${gateway.base.port}</http.bind>
    </accept-options>
  </service>
  <!--
  #############################################################################
  #############################################################################
                       Session configuration
  #############################################################################
  #############################################################################
  -->
  <!--
  Session configuration
  This is the element that associates a session with one or more services by
  matching the domain of each service's accept URL.
  Refer to the Security Guide for more information.
  -->
  <!--
  #############################################################################
  #############################################################################
                       Security configuration
  #############################################################################
  #############################################################################
  -->
  <!-- Security configuration -->
  <security>
    <!--
    The keystore element is used to configure the keystore that contains
    encryption keys for secure communications with Kaazing WebSocket Gateway.
    -->
    <keystore>
      <type>JCEKS</type>
      <file>keystore.db</file>
      <password-file>keystore.pw</password-file>
    </keystore>
    <!--
    The truststore element is used to configure the truststore that
    contains digital certificates for certificate authorities
    trusted by Kaazing WebSocket Gateway.
    -->
    <truststore>
      <file>truststore.db</file>
    </truststore>
    <!--
    This is the element that associates an authenticated user with a set
    of authorized roles.
    -->
    <realm>
      <name>demo</name>
      <description>Kaazing WebSocket Gateway Demo</description>
      <!--
      The login module communicates with a user database to validate user's
      credentials and to determine a set of authorized roles.
      by default, the file-based module is used.
      -->
      <!--
      The following is an example of an LDAP-based login-module element:
      -->
      <!--
      <login-module>
        <type>ldap</type>
        <success>required</success>
        <options>
          <userProvider>ldap://ldap-svr/ou=people,dc=example,dc=com</userProvider>
          <userFilter>(&amp;(uid={USERNAME})(objectClass=inetOrgPerson))</userFilter>
          <authzIdentity>{EMPLOYEENUMBER}</authzIdentity>
        </options>
      </login-module>
      -->
      <!--
      The following is an example of a Kerberos v5 login-module element.
      Full documentation of options for this login-module is at:
      http://java.sun.com/javase/6/docs/jre/api/security/jaas/spec/com/sun/security/auth/module/Krb5LoginModule.html
      -->
      <!--
      <login-module>
        <type>kerberos5</type>
        <success>required</success>
        <options>
          <useKeyTab>true</useKeyTab>
          <keyTab>/etc/krb5.keytab</keyTab>
          <principal>HTTP/localhost@KERBEROS.DOMAIN.NAME</principal>
          <isInitiator>false</isInitiator>
          <doNotPrompt>true</doNotPrompt>
          <storeKey>true</storeKey>
        </options>
      </login-module>
      -->
      <!--
      The following is an example of a GSS login-module element. When combined
      with the kerberos5 login-module and the Negotiate authentication scheme
      this can be used to implement SPNEGO.
      -->
      <!--
      <login-module>
        <type>gss</type>
        <success>required</success>
      </login-module>
      -->
      <!--
      Kaazing WebSocket Gateway also supports a plugin mechanism for integration
      with custom authentication modules based on the Java LoginModule API.
      To use a custom authentication module, configure your login-module element
      as follows:
      -->
      <!--
      <login-module>
        <type>class:fully-qualified-class-name</type>
        <success>required</success>
        <options>
          .
          .
          .
        </options>
      </login-module>
      -->
      <authentication>
        <http-challenge-scheme>Application Basic</http-challenge-scheme>
        <authorization-timeout>20</authorization-timeout>
        <login-modules>
          <login-module>
            <type>file</type>
            <success>required</success>
            <options>
              <file>jaas-config.xml</file>
            </options>
          </login-module>
        </login-modules>
      </authentication>
    </realm>
    <realm>
      <name>basic-recycle</name>
      <description>Kaazing WebSocket Gateway Itests</description>
      <authentication>
        <http-challenge-scheme>Basic</http-challenge-scheme>
        <authorization-mode>recycle</authorization-mode>
        <authorization-timeout>25</authorization-timeout>
        <login-modules>
          <login-module>
            <type>file</type>
            <success>required</success>
            <options>
              <file>jaas-config.xml</file>
            </options>
          </login-module>
        </login-modules>
      </authentication>
    </realm>
    <realm>
      <name>basic-challenge</name>
      <description>Kaazing WebSocket Gateway Itests</description>
      <authentication>
        <http-challenge-scheme>Basic</http-challenge-scheme>
        <authorization-mode>challenge</authorization-mode>
        <authorization-timeout>25</authorization-timeout>
        <login-modules>
          <login-module>
            <type>file</type>
            <success>required</success>
            <options>
              <file>jaas-config.xml</file>
            </options>
          </login-module>
        </login-modules>
      </authentication>
    </realm>
    <realm>
      <name>application-recycle</name>
      <description>Kaazing WebSocket Gateway Itests</description>
      <authentication>
        <http-challenge-scheme>Application Basic</http-challenge-scheme>
        <authorization-mode>recycle</authorization-mode>
        <authorization-timeout>25</authorization-timeout>
        <login-modules>
          <login-module>
            <type>file</type>
            <success>required</success>
            <options>
              <file>jaas-config.xml</file>
            </options>
          </login-module>
        </login-modules>
      </authentication>
    </realm>
    <realm>
      <name>application-challenge</name>
      <description>Kaazing WebSocket Gateway Itests</description>
      <authentication>
        <http-challenge-scheme>Application Basic</http-challenge-scheme>
        <authorization-mode>challenge</authorization-mode>
        <authorization-timeout>6</authorization-timeout>
        <login-modules>
          <login-module>
            <type>file</type>
            <success>required</success>
            <options>
              <file>jaas-config.xml</file>
            </options>
          </login-module>
        </login-modules>
      </authentication>
    </realm>
    <!--
    The realm used by the Kaazing Console for authentication. The SNMP
     management service should be the only one to use this realm.
    -->
    <realm>
      <name>console</name>
      <description>Kaazing Console</description>
      <authentication>
        <http-challenge-scheme>Application Basic</http-challenge-scheme>
        <authorization-timeout>1800</authorization-timeout>
        <!--
            <http-cookie>kaazingConsole</http-cookie>
        -->
        <login-modules>
          <!--
          The login module communicates with a user database to
          validate user's credentials and to determine a set of
          authorized roles. By default, the file-based module is used.
          -->
          <login-module>
            <type>file</type>
            <success>required</success>
            <options>
              <file>jaas-config.xml</file>
            </options>
          </login-module>
        </login-modules>
      </authentication>
    </realm>
  </security>

  <!--
  Session service
  This type of service is used to prevent sessions from timing out.
  Refer to the Security Guide for more information.
  Note: Communication with the session service should be always be
  configured to use HTTPS in production environments.
  -->
  <service>
    <name>session</name>
    <accept>http://${gateway.hostname}:${gateway.extras.port}/session</accept>
    <type>session</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <http.bind>${node.ip}:${gateway.extras.port}</http.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!--
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    -->
  </service>
  <service>
    <name>session-secure</name>
    <accept>https://${gateway.hostname}:${gateway.secure-extras.port}/session</accept>
    <type>session</type>
    <properties>
      <service.domain>${gateway.hostname}</service.domain>
      <encryption.key.alias>session</encryption.key.alias>
    </properties>
    <accept-options>
      <https.bind>${node.ip}:${gateway.secure-extras.port}</https.bind>
    </accept-options>
    <realm-name>demo</realm-name>
    <!--
    <authorization-constraint>
      <require-role>AUTHORIZED</require-role>
    </authorization-constraint>
    -->
  </service>

  <service-defaults>
    <mime-mapping>
      <extension>html</extension>
      <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>htm</extension>
      <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>htm</extension>
      <mime-type>text/html</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>js</extension>
      <mime-type>text/javascript</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>png</extension>
      <mime-type>image/png</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>gif</extension>
      <mime-type>image/gif</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>jpg</extension>
      <mime-type>image/jpeg</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>jpeg</extension>
      <mime-type>image/jpeg</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>css</extension>
      <mime-type>text/css</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>swf</extension>
      <mime-type>application/x-shockwave-flash</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>xap</extension>
      <mime-type>application/x-silverlight-app</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>htc</extension>
      <mime-type>text/x-component</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>jnlp</extension>
      <mime-type>application/x-java-jnlp-file</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>manifest</extension>
      <mime-type>text/cache-manifest</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>appcache</extension>
      <mime-type>text/cache-manifest</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>vtt</extension>
      <mime-type>text/vtt</mime-type>
    </mime-mapping>
    <mime-mapping>
      <extension>aspx</extension>
      <mime-type>text/html</mime-type>
    </mime-mapping>
  </service-defaults>
  <!--
  #############################################################################
  #############################################################################
                       Management configuration
  #############################################################################
  #############################################################################
  -->
  <!--
  Gateway management configuration
  Refer to the Security Guide and the document "How to Manage the Kaazing WebSocket
  Gateway" for more information.
  -->
  <service>
    <name>JMX Management</name>
    <description>JMX management service</description>
    <type>management.jmx</type>
    <properties>
      <connector.server.address>jmx://${node.hostname}:${node.jmxport}/</connector.server.address>
    </properties>
    <realm-name>console</realm-name>
    <!-- secure the management using a security realm -->
    <!-- configure the authorized user roles -->
    <authorization-constraint>
      <require-role>ADMINISTRATOR</require-role>
    </authorization-constraint>
  </service>
</gateway-config>

